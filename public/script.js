const apiKey="ce74a593068c612e5bc8451997f2fb81";let locationArr=[];if(localStorage.getItem("myWeatherLocationArr")){locationArr=JSON.parse(localStorage.getItem("myWeatherLocationArr"))}else{localStorage.setItem("myWeatherLocationArr",JSON.stringify(locationArr))}const locationSettingsTemplate=document.querySelector("#settings-location-item");const locationList=document.querySelector("#location-list");function createLocationList(){document.querySelector("#location-list").innerHTML="";for(let i=0;i<locationArr.length;i++){let locationSettingsItem=locationSettingsTemplate.cloneNode(true).content.querySelector("li");let locationName=locationSettingsItem.querySelector(".location-name");locationName.innerText=`${locationArr[i].name} (${locationArr[i].country})`;locationSettingsItem.setAttribute("data-location-lat",locationArr[i].lat);locationSettingsItem.setAttribute("data-location-lon",locationArr[i].lon);locationList.appendChild(locationSettingsItem);locationSettingsItem.querySelector("button").addEventListener("click",function(e){e.currentTarget.parentNode.remove();locationArr.splice(locationArr.indexOf(locationArr[i]))})}}createLocationList();let dragSrcEl=null;let dragSrcLat=0;let dragSrcLon=0;let dragSrcIndex;let dropSrcIndex;function handleDragStart(e){this.style.opacity="0.4";dragSrcEl=e.currentTarget;dragSrcLat=e.currentTarget.getAttribute("data-location-lat");dragSrcLon=e.currentTarget.getAttribute("data-location-lon");for(let i=0;i<locationArr.length;i++){console.log(locationArr[i].lat,locationArr[i].lon);if(locationArr[i].lat==dragSrcLat&&locationArr[i].lon==dragSrcLon){dragSrcIndex=i}}e.dataTransfer.effectAllowed="move";e.dataTransfer.setData("text/html",dragSrcEl.innerHTML)}function handleDragOver(e){e.preventDefault();e.currentTarget.style.opacity=".4"}function handleDragEnter(e){e.preventDefault();e.currentTarget.style.opacity=".4"}function handleDragLeave(e){e.currentTarget.style.opacity="1"}function handleDrop(e){e.preventDefault();e.currentTarget.style.opacity="1";for(let i=0;i<locationArr.length;i++){if(locationArr[i].lat==this.getAttribute("data-location-lat")&&locationArr[i].lon==this.getAttribute("data-location-lon")){dropSrcIndex=i}}if(dragSrcEl!=this){dragSrcEl.innerHTML=this.innerHTML;dragSrcEl.setAttribute("data-location-lat",this.getAttribute("data-location-lat"));dragSrcEl.setAttribute("data-location-lon",this.getAttribute("data-location-lon"));this.innerHTML=e.dataTransfer.getData("text/html");this.setAttribute("data-location-lat",dragSrcLat);this.setAttribute("data-location-lon",dragSrcLon)}console.log(locationArr);let locationItemCopy1=locationArr[dragSrcIndex];let locationItemCopy2=locationArr[dropSrcIndex];console.log(dragSrcIndex);console.log(dropSrcIndex);locationArr[dragSrcIndex]=locationItemCopy2;locationArr[dropSrcIndex]=locationItemCopy1;console.log(locationArr);return false}function handleDragEnd(e){console.log("Drag end");this.style.opacity="1"}let items=document.querySelectorAll("#location-list li[draggable=true]");items.forEach(function(item){item.addEventListener("dragstart",handleDragStart,false);item.addEventListener("dragenter",handleDragEnter,false);item.addEventListener("dragover",handleDragOver,false);item.addEventListener("dragleave",handleDragLeave,false);item.addEventListener("drop",handleDrop,false);item.addEventListener("dragend",handleDragEnd,false)});getGeoLocation();function getGeoLocation(){if(!navigator.geolocation){triggerToast("Error","Geolocation not supported","error");locationArr.length>0?getData(locationArr):null}else{console.log("Locating…");navigator.geolocation.getCurrentPosition(geolocationSuccess,geolocationError)}}function geolocationError(){triggerToast("Error","Geolocation not found","error");locationArr.length>0?getData(locationArr):null}function geolocationSuccess(position){fetch("https://api.openweathermap.org/geo/1.0/reverse?lat="+position.coords.latitude+"&lon="+position.coords.longitude+"&limit=1&appid="+apiKey).then(response=>response.json()).then(locationData=>{if(locationData.cod){triggerToast("Error",locationData.message,"error")}else{if(!JSON.stringify(locationArr).includes(locationData[0].lat)&&!JSON.stringify(locationArr).includes(locationData[0].lon)){locationData[0].name=`📍 ${locationData[0].name}`;getData(locationData)}setTimeout(function(){locationArr.length>0?getData(locationArr):null},500)}})}const searchForm=document.querySelector("form#search-form");const locationSearchResults=document.querySelector("ul#location-search-reults");const locationSearchItem=document.querySelector("template#add-location-item").content.querySelector("li");const searchInput=document.querySelector("input#search");searchForm.addEventListener("submit",function(e){e.preventDefault();fetch("https://api.openweathermap.org/geo/1.0/direct?q="+searchInput.value+"&limit=5&appid="+apiKey).then(response=>response.json()).then(locationData=>{console.log("Searchresults:");console.log(locationData);if(locationData.cod){triggerToast("Error",locationData.message,"error")}else{locationSearchResults.innerHTML="";if(locationData.length===0){triggerToast("Error","Location not found.","error")}else{for(let i=0;i<locationData.length;i++){let locationSearchItemClone=locationSearchItem.cloneNode(true);locationSearchItemClone.setAttribute("data-location",locationData[i].name);locationSearchItemClone.querySelector("dt").innerText=`${locationData[i].name}`;locationSearchItemClone.querySelector("dd").innerText=locationData[i].state?`(${locationData[i].country} | ${locationData[i].state})`:`(${locationData[i].country})`;locationSearchResults.appendChild(locationSearchItemClone);locationSearchItemClone.addEventListener("click",function(){if(!locationArr.includes(locationData[i])){locationArr.push(locationData[i]);createLocationList();triggerToast("Info","Location added.","info")}else{triggerToast("Error","Location already exists.","error")}})}}}})});const dialogButtons=document.querySelectorAll("button[data-dialog-target]");const dialogs=document.querySelectorAll(".dialog");dialogButtons.forEach(button=>{button.addEventListener("click",function openDialog(e){let dialogTarget=document.getElementById(e.currentTarget.getAttribute("data-dialog-target"));dialogTarget.classList.add("open");document.querySelector("body").style.overflow="hidden"})});function closeDialog(e){dialogs.forEach(dialog=>dialog.classList.remove("open"));document.querySelector("body").style.overflow="auto";if(JSON.stringify(locationArr)!==localStorage.getItem("myWeatherLocationArr")){localStorage.setItem("myWeatherLocationArr",JSON.stringify(locationArr));document.querySelector("main").innerHTML="";getGeoLocation()}}let weatherLocationName;function getData(locationArr,counter=0){fetch("https://api.openweathermap.org/data/2.5/onecall?lat="+locationArr[counter].lat+"&lon="+locationArr[counter].lon+"&appid="+apiKey+"&units=metric&exclude=minutely").then(response=>response.json()).then(weatherData=>{if(weatherData.cod){triggerToast("Error",weatherData.message,"error")}else{weatherLocationName=locationArr[counter].name;console.log(weatherLocationName);console.log(weatherData);setWeatherData(weatherData);if(counter<locationArr.length-1){counter++;getData(locationArr,counter)}else{counter=0}}})}function setWeatherData(weatherData){const weatherTemplate=document.querySelector("#weather-template");let weatherTemplateClone=weatherTemplate.cloneNode(true);const weatherLocation=weatherTemplateClone.content.querySelector(".weather-location");weatherLocation.innerText=weatherLocationName;const currentWeatherVideo=weatherTemplateClone.content.querySelector(".current-weather-video > video");currentWeatherVideo.setAttribute("src","vid/"+setWeatherMedia(weatherData.current.weather[0],"mp4")+".mp4");const currentWeatherIcon=weatherTemplateClone.content.querySelector(".current-weather-icon");currentWeatherIcon.setAttribute("src","images/icons/"+setWeatherMedia(weatherData.current.weather[0],"svg")+".svg");const currentTemperature=weatherTemplateClone.content.querySelector(".current-temperature-value");currentTemperature.innerText=Math.round(weatherData.current.temp);currentTemperature.parentNode.setAttribute("onclick",'triggerToast("Now", "'+weatherData.current.weather[0].description+" | "+Math.round(weatherData.current.temp)+'°")');let currentDayValue=getDay(weatherData.current.dt,weatherData.timezone_offset);let currentDateValue=getDate(weatherData.current.dt,weatherData.timezone_offset);let currentTimeValue=getHoursAndMinutes(weatherData.current.dt,weatherData.timezone_offset);const currentTimeContainer=weatherTemplateClone.content.querySelector(".current-time");currentTimeContainer.innerText=`${currentDayValue}, ${currentDateValue} - ${currentTimeValue}`;const sunMoonContainer=weatherTemplateClone.content.querySelector(".sun-moon");sunMoonContainer.addEventListener("click",function(e){e.currentTarget.classList.toggle("flipped")});const currentSunrise=weatherTemplateClone.content.querySelector(".current-sunrise-value");currentSunrise.innerText=getHoursAndMinutes(weatherData.current.sunrise,weatherData.timezone_offset);let currentSunpositionValue=mapPercentageValue(weatherData.current.sunrise,weatherData.current.sunset,weatherData.current.dt);const currentSunpositionIndicator=weatherTemplateClone.content.querySelector(".current-sunposition-indicator");currentSunpositionIndicator.style.left=currentSunpositionValue+"%";currentSunpositionValue===0?currentSunpositionIndicator.style.opacity=0:currentSunpositionIndicator.style.opacity=1;const currentSunpositionProgress=weatherTemplateClone.content.querySelector(".current-sunposition-progress");currentSunpositionProgress.style.width=currentSunpositionValue+"%";const currentSunset=weatherTemplateClone.content.querySelector(".current-sunset-value");currentSunset.innerText=getHoursAndMinutes(weatherData.current.sunset,weatherData.timezone_offset);const currentMoonrise=weatherTemplateClone.content.querySelector(".current-moonrise-value");currentMoonrise.innerText=getHoursAndMinutes(weatherData.daily[0].moonset,weatherData.timezone_offset);let currentMoonpositionValue=mapPercentageValue(weatherData.daily[0].moonrise,weatherData.daily[0].moonset,weatherData.current.dt);const currentMoonpositionIndicator=weatherTemplateClone.content.querySelector(".current-moonposition-indicator");currentMoonpositionIndicator.style.left=currentMoonpositionValue+"%";currentMoonpositionValue===0?currentMoonpositionIndicator.style.opacity=0:currentMoonpositionIndicator.style.opacity=1;const currentMoonpositionProgress=weatherTemplateClone.content.querySelector(".current-moonposition-progress");currentMoonpositionProgress.style.width=currentMoonpositionValue+"%";const currentMoonset=weatherTemplateClone.content.querySelector(".current-moonset-value");currentMoonset.innerText=getHoursAndMinutes(weatherData.daily[0].moonrise,weatherData.timezone_offset);currentSunpositionValue===0&&currentMoonpositionValue!==0?sunMoonContainer.classList.add("flipped"):null;weatherTemplateClone.content.querySelector("#needle").style.transform="rotate("+weatherData.current.wind_deg+"deg)";const currentWindDirection=weatherTemplateClone.content.querySelector(".current-wind-direction-value");currentWindDirection.innerText=setWindDirection(weatherData.current.wind_deg,false);currentWindDirection.parentNode.setAttribute("onclick",'triggerToast("Winddirection", "'+setWindDirection(weatherData.current.wind_deg,false)+" | "+setWindDirection(weatherData.current.wind_deg,true)+'")');const currentWindSpeed=weatherTemplateClone.content.querySelector(".current-wind-speed-value");currentWindSpeed.innerText=Math.round(weatherData.current.wind_speed*3.6);currentWindSpeed.parentNode.setAttribute("onclick",'triggerToast("Windspeed", "'+Math.round(weatherData.current.wind_speed*3.6)+' km/h")');const currentPressure=weatherTemplateClone.content.querySelector(".current-pressure-value");currentPressure.innerText=weatherData.current.pressure;currentPressure.parentNode.setAttribute("onclick",'triggerToast("Pressure", "'+weatherData.current.pressure+' hPa")');const currentHumidity=weatherTemplateClone.content.querySelector(".current-humidity-value");currentHumidity.innerText=weatherData.current.humidity;currentHumidity.parentNode.setAttribute("onclick",'triggerToast("Humidity", "'+weatherData.current.humidity+' %")');const currentPop=weatherTemplateClone.content.querySelector(".current-pop-value");currentPop.innerText=Math.round(weatherData.hourly[0].pop*100);if(weatherData.hourly[0].rain){let rainVolume=1e3*1e3*weatherData.hourly[0].rain["1h"]/1e6;currentPop.parentNode.setAttribute("onclick",'triggerToast("Rain", "'+Math.round(weatherData.hourly[0].pop*100)+" % | "+rainVolume+' l/m²")')}else if(weatherData.hourly[0].snow){currentPop.parentNode.setAttribute("onclick",'triggerToast("Snow", "'+Math.round(weatherData.hourly[0].pop*100)+" % | "+weatherData.hourly[0].snow["1h"]+' mm")')}else{currentPop.parentNode.setAttribute("onclick",'triggerToast("Probability of precipitation", "'+Math.round(weatherData.hourly[0].pop*100)+' %")')}const currentUvIndex=weatherTemplateClone.content.querySelector(".current-uvindex-value");currentUvIndex.innerText=weatherData.current.uvi;currentUvIndex.parentNode.setAttribute("onclick",'triggerToast("UV Index", "'+weatherData.current.uvi+'")');const hourlyWeatherList=weatherTemplateClone.content.querySelector(".hourly-weather-list");for(let i=1;i<25;i++){const hourlyWeatherItem=weatherTemplateClone.content.querySelector(".hourly-weather-item");const hourlyWeatherItemClone=hourlyWeatherItem.cloneNode(true);const hourlyWeatherIcon=hourlyWeatherItemClone.querySelector(".hourly-weather-item img");hourlyWeatherIcon.setAttribute("src","images/icons/"+setWeatherMedia(weatherData.hourly[i].weather[0],"svg")+".svg");const hourlyTemperature=hourlyWeatherItemClone.querySelector(".hourly-temperature");hourlyTemperature.innerText=Math.round(weatherData.hourly[i].temp);const hourlyTimestamp=hourlyWeatherItemClone.querySelector(".hourly-timestamp");hourlyTimestamp.innerText=getHoursAndMinutes(weatherData.hourly[i].dt,weatherData.timezone_offset);let toastTitle=getHoursAndMinutes(weatherData.hourly[i].dt,weatherData.timezone_offset);let toastDescription=weatherData.hourly[i].weather[0].description+" | "+Math.round(weatherData.hourly[i].temp)+"°";hourlyWeatherItemClone.setAttribute("onclick",'triggerToast("'+toastTitle+'", "'+toastDescription+'")');hourlyWeatherList.appendChild(hourlyWeatherItemClone,true)}const dailyWeatherList=weatherTemplateClone.content.querySelector(".daily-weather-list");for(let i=1;i<8;i++){const dailyWeatherItem=weatherTemplateClone.content.querySelector(".daily-weather-item");const dailyWeatherItemClone=dailyWeatherItem.cloneNode(true);const dailyDay=dailyWeatherItemClone.querySelector(".daily-day");const dailyDate=dailyWeatherItemClone.querySelector(".daily-date");dailyDay.innerText=getDay(weatherData.daily[i].dt,weatherData.timezone_offset);dailyDate.innerText=getDate(weatherData.daily[i].dt,weatherData.timezone_offset);const dailyWeatherIcon=dailyWeatherItemClone.querySelector(".daily-weather-item img");dailyWeatherIcon.setAttribute("src","images/icons/"+setWeatherMedia(weatherData.daily[i].weather[0],"svg")+".svg");const dailyTemperature=dailyWeatherItemClone.querySelector(".daily-temperature");dailyTemperature.innerText=Math.round(weatherData.daily[i].temp.day);const dailyTemperatureMax=dailyWeatherItemClone.querySelector(".daily-temperature-max");dailyTemperatureMax.innerText=Math.round(weatherData.daily[i].temp.max);const dailyTemperatureMin=dailyWeatherItemClone.querySelector(".daily-temperature-min");dailyTemperatureMin.innerText=Math.round(weatherData.daily[i].temp.min);const dailyPop=dailyWeatherItemClone.querySelector(".daily-pop");dailyPop.innerText=`${Math.round(weatherData.daily[i].pop*100)} %`;const dailyWind=dailyWeatherItemClone.querySelector(".daily-wind");dailyWind.innerText=`${Math.round(weatherData.daily[i].wind_speed*3.6)} km/h`;let toastTitle=getDay(weatherData.daily[i].dt,weatherData.timezone_offset);let toastDescription=weatherData.daily[i].weather[0].description+" | "+Math.round(weatherData.daily[i].temp.day)+"°";dailyWeatherItemClone.setAttribute("onclick",'triggerToast("'+toastTitle+'", "'+toastDescription+'")');dailyWeatherList.appendChild(dailyWeatherItemClone,true)}if(weatherData.alerts){const alertTemplate=document.querySelector("#alert-template");let alertTemplateClone=alertTemplate.cloneNode(true);const alertValue=alertTemplateClone.content.querySelector(".alert-value");alertValue.innerText=weatherData.alerts[0].event;weatherTemplateClone.content.querySelector("section.current-weather").insertBefore(alertTemplateClone.content.querySelector(".weather-alert"),weatherTemplateClone.content.querySelector(".current-weather-data"))}document.querySelector("main").appendChild(weatherTemplateClone.content.querySelector("article"),true)}function triggerToast(title,description,type="info"){const toastTemplate=document.querySelector("#toast-template");let toastTemplateClone=toastTemplate.cloneNode(true).content.querySelector(".toast");if(type==="info"){toastTemplateClone.classList.add("info");toastTemplateClone.querySelector("dl dt").innerHTML='<img src="images/icons/info.svg" height="24" width="24" alt="Info icon" /> '+title;toastTemplateClone.querySelector("dl dd").innerText=description}else if(type==="warning"){toastTemplateClone.classList.add("warning");toastTemplateClone.querySelector("dl dt").innerHTML='<img src="images/icons/warning.svg" height="24" width="24" alt="Warning icon" /> '+title;toastTemplateClone.querySelector("dl dd").innerText=description}else if(type==="error"){toastTemplateClone.classList.add("error");toastTemplateClone.querySelector("dl dt").innerHTML='<img src="images/icons/error.svg" height="24" width="24" alt="Error icon" /> '+title;toastTemplateClone.querySelector("dl dd").innerText=description}else{toastTemplateClone.querySelector(".toast dl dt").innerText=title;toastTemplateClone.querySelector("dl dd").innerText=description}document.querySelector("body").appendChild(toastTemplateClone,true);setTimeout(function(){document.querySelector(".toast").remove()},3500)}function getHoursAndMinutes(timestamp,offset){let date=new Date((timestamp+offset)*1e3);hours=date.getUTCHours()<10?"0"+date.getUTCHours():date.getUTCHours();mins=date.getUTCMinutes()<10?"0"+date.getUTCMinutes():date.getUTCMinutes();return hours+":"+mins}function getDate(timestamp,offset){let date=new Date((timestamp+offset)*1e3);day=date.getUTCDate()<10?"0"+date.getUTCDate():date.getUTCDate();let month=date.getUTCMonth()+1;month=month<10?"0"+month:month;return day+"."+month+"."}function getDay(timestamp,offset){let date=new Date((timestamp+offset)*1e3);day=date.getUTCDay();switch(day){case 1:return"Mon.";case 2:return"Tue.";case 3:return"Wed.";case 4:return"Thu.";case 5:return"Fri.";case 6:return"Sat.";case 0:return"Sun."}}function mapPercentageValue(min,max,value){if(value<=max&&value>=min){return Math.round(100/(max-min)*(value-min))}else{return 0}}function setWeatherMedia(weather,filetype){if(filetype==="mp4"){let videoName="";if(weather.icon==="01d"){videoName="clear-sky-day"}if(weather.icon==="01n"){videoName="clear-sky-night"}if(weather.icon==="02d"){videoName="few-clouds-day"}if(weather.icon==="02n"){videoName="few-clouds-night"}if(weather.icon==="03d"||weather.icon==="03n"){videoName="cloud"}if(weather.icon==="04d"||weather.icon==="04n"){videoName="clouds"}if(weather.icon==="09d"||weather.icon==="09n"||weather.icon==="10d"||weather.icon==="10n"){videoName="rain"}if(weather.icon==="11d"||weather.icon==="11n"){videoName="thunderstorm"}if(weather.icon==="13d"||weather.icon==="13n"){videoName="snow"}if(weather.icon==="50d"||weather.icon==="50n"){videoName="mist"}return videoName}if(filetype==="svg"){let iconName="";if(["01d","01n","02d","02n"].includes(weather.icon)){if(weather.icon==="01d"){iconName="clear-sky-day"}if(weather.icon==="01n"){iconName="clear-sky-night"}if(weather.icon==="02d"){iconName="few-clouds-day"}if(weather.icon==="02n"){iconName="few-clouds-night"}}else{if([200,201,202,210,211,212,221,230,231,232].includes(weather.id)){iconName="thunderstorm"}if([300,301,302,310,311,312,313,314,221].includes(weather.id)){iconName="drizzle"}if([500,501].includes(weather.id)){iconName="light-rain"}if([502,503,504,520,521,522,531].includes(weather.id)){iconName="light-rain"}if([511,615,616].includes(weather.id)){iconName="snow-rain"}if([600,612,620].includes(weather.id)){iconName="light-snow"}if([601,613,621].includes(weather.id)){iconName="snow"}if([602,611,622].includes(weather.id)){iconName="heavy-snow"}if([701,721,741].includes(weather.id)){iconName="fog"}if([711,731,751,761,762].includes(weather.id)){iconName="smoke"}if([771].includes(weather.id)){iconName="wind"}if([781].includes(weather.id)){iconName="tornado"}if(weather.id===802){iconName="cloud"}if([803,804].includes(weather.id)){iconName="clouds"}}return iconName}}function setWindDirection(degrees,deg){const step=11.25;if(degrees>=0-step&&degrees<0+step||degrees>=360-step){return deg?degrees+"°":"N"}if(degrees>22.5-step&&degrees<22.5+step){return deg?degrees+"°":"NNE"}if(degrees>45-step&&degrees<45+step){return deg?degrees+"°":"NE"}if(degrees>67.5-step&&degrees<67.5+step){return deg?degrees+"°":"ENE"}if(degrees>90-step&&degrees<90+step){return deg?degrees+"°":"E"}if(degrees>112.5-step&&degrees<112.5+step){return deg?degrees+"°":"ESE"}if(degrees>135-step&&degrees<135+step){return deg?degrees+"°":"SE"}if(degrees>157.5-step&&degrees<157.5+step){return deg?degrees+"°":"SSE"}if(degrees>180-step&&degrees<180+step){return deg?degrees+"°":"S"}if(degrees>202.5-step&&degrees<202.5+step){return deg?degrees+"°":"SSW"}if(degrees>225-step&&degrees<225+step){return deg?degrees+"°":"SW"}if(degrees>247.5-step&&degrees<247.5+step){return deg?degrees+"°":"WSW"}if(degrees>270-step&&degrees<270+step){return deg?degrees+"°":"W"}if(degrees>292.5-step&&degrees<292.5+step){return deg?degrees+"°":"WNW"}if(degrees>315-step&&degrees<315+step){return deg?degrees+"°":"NW"}if(degrees>337.5-step&&degrees<=337.5+step){return deg?degrees+"°":"NNW"}}